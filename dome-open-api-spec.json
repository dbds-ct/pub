{
  "openapi" : "3.0.1",
  "info" : {
    "contact" : {
      "email" : "chuck.marco@prattwhitney.com",
      "name" : "Chuck Marco",
      "url" : "https://chuck-nbc.fandom.com/wiki/Marco"
    },
    "description" : "RESTful API for Pratt & Whitney DOME Application.",
    "title" : "Digital Overhaul Management of Engines",
    "version" : "2021-04-28"
  },
  "externalDocs" : {
    "description" : "Project SharePoint"
  },
  "servers" : [ {
    "description" : "DBDS Devlelopment",
    "url" : "http://192.168.3.171:81/dome"
  }, {
    "description" : "DBDS Stage",
    "url" : "http://192.168.3.171:82/dome"
  }, {
    "description" : "P&W Stage",
    "url" : "https://dome-ui-test.prattwhitney.com/dome"
  } ],
  "security" : [ {
    "bearerAuth" : [ ]
  } ],
  "tags" : [ {
    "description" : "MRO (maintenance, repair and operations) Collaboration API.",
    "name" : "MRO Collab"
  } ],
  "paths" : {
    "/v1/foo" : {
      "get" : {
        "operationId" : "getProfile",
        "responses" : {
          "200" : {
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "test-controller" ]
      }
    },
    "/v1/mro-collab/comments/{engine-id}" : {
      "get" : {
        "description" : "Returns the matching comment record(s).",
        "operationId" : "getEngineComments_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "engine-id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentResponse"
                }
              }
            },
            "description" : "Returned comment record(s) matching the supplied engineId."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommentResponse"
                }
              }
            },
            "description" : "Not Found"
          }
        },
        "tags" : [ "MRO Collab" ]
      },
      "put" : {
        "description" : "Updates the supplied comment record.",
        "operationId" : "updateEngineComments_1",
        "parameters" : [ {
          "in" : "path",
          "name" : "engine-id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Comment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "Updates comment record matching the commentId and engineId."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Comment"
                }
              }
            },
            "description" : "Not Found"
          }
        },
        "tags" : [ "MRO Collab" ]
      }
    },
    "/v1/mro-collab/pacing-items/{engine-id}" : {
      "get" : {
        "description" : "Returns the matching pacing-item record(s).",
        "operationId" : "getEngineComments",
        "parameters" : [ {
          "in" : "path",
          "name" : "engine-id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PacingItemResponse"
                }
              }
            },
            "description" : "Returned pacing-item record(s) matching the supplied engineId."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PacingItemResponse"
                }
              }
            },
            "description" : "Not Found"
          }
        },
        "tags" : [ "MRO Collab" ]
      },
      "put" : {
        "description" : "Updates the supplied comment record.",
        "operationId" : "updateEngineComments",
        "parameters" : [ {
          "in" : "path",
          "name" : "engine-id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PacingItem"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PacingItem"
                }
              }
            },
            "description" : "Updates pacing-item record matching the pacingId and engineId."
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PacingItem"
                }
              }
            },
            "description" : "Not Found"
          }
        },
        "tags" : [ "MRO Collab" ]
      }
    },
    "/v1/mro-collab/workorder" : {
      "delete" : {
        "description" : "Deletes the matching EngineTracking MRO work order.",
        "operationId" : "deleteWorkOrderFromMRO",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MroWorkOrderDeleteRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              }
            },
            "description" : "WorkOrder dropped for matching EngineTracking record."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "All request values fail validation." : {
                    "description" : "All request values fail validation.",
                    "summary" : "All request values made to fail validation.",
                    "value" : {
                      "status" : "BAD_REQUEST",
                      "statusCode" : 400,
                      "reason" : "Bad Request",
                      "message" : "Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.pw.dome.mro.collab.workorder.MroWorkOrderController.deleteWorkOrderFromMRO(com.pw.dome.mro.collab.workorder.MroWorkOrderDeleteRequest) with 3 errors: [Field error in object 'mroWorkOrderDeleteRequest' on field 'mroShopCode': rejected value [ESAdskndsduhsudhisuhdshdshdhsdsdhishdis]; codes [Size.mroWorkOrderDeleteRequest.mroShopCode,Size.mroShopCode,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [mroWorkOrderDeleteRequest.mroShopCode,mroShopCode]; arguments []; default message [mroShopCode],10,1]; default message [size must be between 1 and 10]] [Field error in object 'mroWorkOrderDeleteRequest' on field 'eventId': rejected value [-1]; codes [Min.mroWorkOrderDeleteRequest.eventId,Min.eventId,Min.java.lang.Integer,Min]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [mroWorkOrderDeleteRequest.eventId,eventId]; arguments []; default message [eventId],1]; default message [must be greater than or equal to 1]] [Field error in object 'mroWorkOrderDeleteRequest' on field 'esn': rejected value [723821odaauasashashashahsuhaushuahsasas]; codes [Size.mroWorkOrderDeleteRequest.esn,Size.esn,Size.java.lang.String,Size]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [mroWorkOrderDeleteRequest.esn,esn]; arguments []; default message [esn],20,1]; default message [size must be between 1 and 20]]",
                      "errors" : [ "mroShopCode: size must be between 1 and 10", "eventId: must be greater than or equal to 1", "esn: size must be between 1 and 20" ]
                    }
                  },
                  "One request value fails validation." : {
                    "description" : "One request value fails validation.",
                    "summary" : "One request value is null and fails validation.",
                    "value" : {
                      "status" : "BAD_REQUEST",
                      "statusCode" : 400,
                      "reason" : "Bad Request",
                      "message" : "Validation failed for argument [0] in public org.springframework.http.ResponseEntity<?> com.pw.dome.mro.collab.workorder.MroWorkOrderController.deleteWorkOrderFromMRO(com.pw.dome.mro.collab.workorder.MroWorkOrderDeleteRequest): [Field error in object 'mroWorkOrderDeleteRequest' on field 'eventId': rejected value [null]; codes [NotNull.mroWorkOrderDeleteRequest.eventId,NotNull.eventId,NotNull.java.lang.Integer,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [mroWorkOrderDeleteRequest.eventId,eventId]; arguments []; default message [eventId]]; default message [must not be null]]",
                      "errors" : [ "eventId: must not be null" ]
                    }
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "EventId doesn't match." : {
                    "description" : "EventId doesn't match.",
                    "summary" : "Error response when request EventId not matched.",
                    "value" : {
                      "status" : "NOT_FOUND",
                      "statusCode" : 404,
                      "reason" : "Not Found",
                      "message" : "No matching records to update found. ESN='723821' has 1 match(es). EventId='40436799' has 0 match(es). ShopCode='ESA' has 3737 match(es). ",
                      "errors" : [ "No matching records to update found. ESN='723821' has 1 match(es). EventId='40436799' has 0 match(es). ShopCode='ESA' has 3737 match(es). " ]
                    }
                  },
                  "ShopCode doesn't match." : {
                    "description" : "ShopCode doesn't match.",
                    "summary" : "Error response when request ShopCode not matched.",
                    "value" : {
                      "status" : "NOT_FOUND",
                      "statusCode" : 404,
                      "reason" : "Not Found",
                      "message" : "No matching records to update found. ESN='723821' has 1 match(es). EventId='4043679' has 1 match(es). ShopCode='ESAAA' has 0 match(es). ",
                      "errors" : [ "No matching records to update found. ESN='723821' has 1 match(es). EventId='4043679' has 1 match(es). ShopCode='ESAAA' has 0 match(es). " ]
                    }
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not Found"
          }
        },
        "tags" : [ "MRO Collab" ]
      },
      "post" : {
        "description" : "Updates the matching EngineTracking record with the MRO work order.",
        "operationId" : "updateWorkOrderFromMRO",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MroWorkOrderUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "WorkOrder updated for matching EngineTracking record."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "All request values fail validation." : {
                    "description" : "All request values fail validation.",
                    "summary" : "All request values made to fail validation.",
                    "value" : {
                      "status" : "BAD_REQUEST",
                      "statusCode" : 400,
                      "reason" : "Bad Request",
                      "message" : "Validation failed for argument [0] in public org.springframework.http.ResponseEntity<java.lang.String> com.pw.dome.mro.collab.workorder.MroWorkOrderController.getMroInfo(com.pw.dome.mro.collab.workorder.MroWorkOrderRequest) with 4 errors: [Field error in object 'mroWorkOrderRequest' on field 'mroShopCode': rejected value [ESAjidjowjdosjdoijsdojsodjsdoisd]; codes [Length.mroWorkOrderRequest.mroShopCode,Length.mroShopCode,Length.java.lang.String,Length]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [mroWorkOrderRequest.mroShopCode,mroShopCode]; arguments []; default message [mroShopCode],10,1]; default message [length must be between 1 and 10]] [Field error in object 'mroWorkOrderRequest' on field 'esn': rejected value [72382112902912912091290120912098u12]; codes [Length.mroWorkOrderRequest.esn,Length.esn,Length.java.lang.String,Length]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [mroWorkOrderRequest.esn,esn]; arguments []; default message [esn],20,1]; default message [length must be between 1 and 20]] [Field error in object 'mroWorkOrderRequest' on field 'eventId': rejected value [-1]; codes [Range.mroWorkOrderRequest.eventId,Range.eventId,Range.java.lang.Integer,Range]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [mroWorkOrderRequest.eventId,eventId]; arguments []; default message [eventId],9223372036854775807,1]; default message [must be between 1 and 9223372036854775807]] [Field error in object 'mroWorkOrderRequest' on field 'mroWorkOrder': rejected value [0123456789mjdoiasjodjnwoidjowdjoidjoihjndo]; codes [Length.mroWorkOrderRequest.mroWorkOrder,Length.mroWorkOrder,Length.java.lang.String,Length]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [mroWorkOrderRequest.mroWorkOrder,mroWorkOrder]; arguments []; default message [mroWorkOrder],25,1]; default message [length must be between 1 and 25]]",
                      "errors" : [ "mroShopCode: length must be between 1 and 10", "esn: length must be between 1 and 20", "eventId: must be between 1 and 9223372036854775807", "mroWorkOrder: length must be between 1 and 25" ]
                    }
                  },
                  "One request value fails validation." : {
                    "description" : "One request value fails validation.",
                    "summary" : "One request value is null and fails validation.",
                    "value" : {
                      "status" : "BAD_REQUEST",
                      "statusCode" : 400,
                      "reason" : "Bad Request",
                      "message" : "Validation failed for argument [0] in public org.springframework.http.ResponseEntity<java.lang.String> com.pw.dome.mro.collab.workorder.MroWorkOrderController.getMroInfo(com.pw.dome.mro.collab.workorder.MroWorkOrderRequest): [Field error in object 'mroWorkOrderRequest' on field 'eventId': rejected value [null]; codes [NotNull.mroWorkOrderRequest.eventId,NotNull.eventId,NotNull.java.lang.Integer,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [mroWorkOrderRequest.eventId,eventId]; arguments []; default message [eventId]]; default message [The field may not be null.]]",
                      "errors" : [ "eventId: The field may not be null." ]
                    }
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Bad Request"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "ESN doesn't match." : {
                    "description" : "ESN doesn't match.",
                    "summary" : "Error response when request ESN not matched.",
                    "value" : {
                      "status" : "NOT_FOUND",
                      "statusCode" : 404,
                      "reason" : "Not Found",
                      "message" : "No matching records to update found. ESN='72382111' has 0 match(es). EventId='4043679' has 1 match(es). ShopCode='ESA' has 3737 match(es). ",
                      "errors" : [ "No matching records to update found. ESN='72382111' has 0 match(es). EventId='4043679' has 1 match(es). ShopCode='ESA' has 3737 match(es). " ]
                    }
                  },
                  "ShopCode doesn't match." : {
                    "description" : "ShopCode doesn't match.",
                    "summary" : "Error response when request ShopCode not matched.",
                    "value" : {
                      "status" : "NOT_FOUND",
                      "statusCode" : 404,
                      "reason" : "Not Found",
                      "message" : "No matching records to update found. ESN='723821' has 1 match(es). EventId='4043679' has 1 match(es). ShopCode='ESAAA' has 0 match(es). ",
                      "errors" : [ "No matching records to update found. ESN='723821' has 1 match(es). EventId='4043679' has 1 match(es). ShopCode='ESAAA' has 0 match(es). " ]
                    }
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description" : "Not Found"
          }
        },
        "tags" : [ "MRO Collab" ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "Comment" : {
        "type" : "object",
        "description" : "Comment DTO schema.",
        "properties" : {
          "commentId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dateUpdated" : {
            "type" : "string",
            "format" : "date-time"
          },
          "external" : {
            "type" : "boolean"
          },
          "logEmail" : {
            "maxLength" : 50,
            "minLength" : 1,
            "type" : "string"
          },
          "notes" : {
            "maxLength" : 2000,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [ "commentId", "dateUpdated", "external", "logEmail", "notes" ]
      },
      "CommentResponse" : {
        "type" : "object",
        "properties" : {
          "comments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Comment"
            }
          },
          "engineId" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "required" : [ "comments", "engineId" ]
      },
      "ErrorResponse" : {
        "type" : "object",
        "description" : "Error response schema.",
        "properties" : {
          "errors" : {
            "type" : "array",
            "description" : "Chain of application error messages.",
            "items" : {
              "type" : "string",
              "description" : "Chain of application error messages."
            }
          },
          "message" : {
            "type" : "string",
            "description" : "Application error message."
          },
          "reason" : {
            "type" : "string",
            "description" : "The HttpStatus Reason Phrase  (e.g., NOT FOUND)."
          },
          "status" : {
            "type" : "string",
            "description" : "The HttpStatus name (e.g., NOT_FOUND)."
          },
          "statusCode" : {
            "type" : "integer",
            "description" : "The HttpStatus value  (e.g., 404).",
            "format" : "int32"
          }
        }
      },
      "MroWorkOrderDeleteRequest" : {
        "type" : "object",
        "description" : "Delete work order schema.",
        "properties" : {
          "esn" : {
            "maxLength" : 20,
            "minLength" : 1,
            "type" : "string"
          },
          "eventId" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "mroShopCode" : {
            "maxLength" : 10,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [ "esn", "eventId", "mroShopCode" ]
      },
      "MroWorkOrderUpdateRequest" : {
        "type" : "object",
        "description" : "Update work order schema.",
        "properties" : {
          "esn" : {
            "maxLength" : 20,
            "minLength" : 1,
            "type" : "string"
          },
          "eventId" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          },
          "mroShopCode" : {
            "maxLength" : 10,
            "minLength" : 1,
            "type" : "string"
          },
          "mroWorkOrder" : {
            "maxLength" : 25,
            "minLength" : 1,
            "type" : "string",
            "description" : "Named SMI in MRO system."
          }
        },
        "required" : [ "esn", "eventId", "mroShopCode", "mroWorkOrder" ]
      },
      "PacingItem" : {
        "type" : "object",
        "description" : "PacingItem DTO schema.",
        "properties" : {
          "category" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string"
          },
          "closeDate" : {
            "type" : "string",
            "format" : "date"
          },
          "commitDate" : {
            "type" : "string",
            "format" : "date"
          },
          "datReceivedDate" : {
            "type" : "string",
            "format" : "date"
          },
          "datShipOutDate" : {
            "type" : "string",
            "format" : "date"
          },
          "description" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string"
          },
          "dollarsSaved" : {
            "type" : "integer",
            "format" : "int32"
          },
          "engineId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "engineSN" : {
            "maxLength" : 10,
            "minLength" : 1,
            "type" : "string"
          },
          "escItem" : {
            "type" : "boolean"
          },
          "holdDaysApproved" : {
            "type" : "integer",
            "format" : "int32"
          },
          "logDateTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "needDate" : {
            "type" : "string",
            "format" : "date"
          },
          "notes" : {
            "maxLength" : 2000,
            "minLength" : 0,
            "type" : "string"
          },
          "pacingId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "partId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string"
          },
          "purchaseOrder" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date"
          },
          "subCategory" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string"
          },
          "uniqueId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string"
          },
          "vendorInDate" : {
            "type" : "string",
            "format" : "date"
          },
          "vendorName" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string"
          },
          "vendorOutDate" : {
            "type" : "string",
            "format" : "date"
          },
          "wsInd" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "required" : [ "category", "closeDate", "commitDate", "datReceivedDate", "datShipOutDate", "description", "engineId", "engineSN", "escItem", "pacingId" ]
      },
      "PacingItemResponse" : {
        "type" : "object",
        "properties" : {
          "engineId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pacingItems" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PacingItem"
            }
          }
        },
        "required" : [ "engineId", "pacingItems" ]
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "bearerFormat" : "jwt",
        "description" : "JWT Bearer Authorization.",
        "scheme" : "bearer",
        "type" : "http"
      }
    }
  }
}